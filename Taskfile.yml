version: '3'

silent: true

tasks:
    # Docker tasks
    docker-compose:
        desc: Call docker compose cli
        cmds:
            - docker compose {{.CLI_ARGS}}

    up:
        desc: Create and start a container
        cmds:
            -   task: docker-compose
                vars:
                    # Add --build once when you add changes to the dockerfile
                    CLI_ARGS: up --detach --no-deps {{.SERVICE | default "php"}}
        status:
            - docker compose ps --services --status=running | grep {{.SERVICE | default "php"}}

    down:
        desc: Stop and remove containers
        cmds:
            -   task: docker-compose
                vars:
                    CLI_ARGS: down -v

    run:
        desc: Run a one-off command on a container
        cmds:
            -   task: docker-compose
                vars:
                    CLI_ARGS: run --rm --no-deps {{.SERVICE | default "php"}} {{.CLI_ARGS}}

    exec:
        desc: Execute a command in a running container
        cmds:
            -   task: docker-compose
                vars:
                    CLI_ARGS: exec {{.SERVICE | default "php"}} {{.CLI_ARGS}}
        preconditions:
            -   task: docker-compose
                vars:
                    CLI_ARGS: ps --services --status=running | grep {{.SERVICE | default "php"}}

    execrun:
        desc: Launch a command using "exec" if container is running, or with "run" otherwise
        cmds:
            -   cmd: |
                    if [[ -n `docker compose ps --services --status=running | grep {{.SERVICE | default "php"}}` ]]; then
                      task exec SERVICE={{.SERVICE | default "php"}} -- {{.CLI_ARGS}}
                    else
                      task run SERVICE={{.SERVICE | default "php"}} -- {{.CLI_ARGS}}
                    fi;

    # Services
    php:
        desc: Run php in background
        run: once
        cmds:
            -   task: up
                vars:
                    SERVICE: php

    database:
        desc: Run database in background
        run: once
        vars:
            PORT: 3306
        cmds:
            -   task: up
                vars:
                    SERVICE: database
            -   task: shell
                vars:
                    CLI_ARGS: -c "while ! nc -z database {{.PORT}} 2> /dev/null; do sleep 0.1; done;" 2> /dev/null

    # CLI tasks
    shell:
        desc: Run shell
        cmds:
            -   task: execrun
                vars:
                    SERVICE: php
                    CLI_ARGS: /bin/sh {{.CLI_ARGS}}

    php-cli:
        desc: Run PHP-cli
        cmds:
            -   task: execrun
                vars:
                    SERVICE: php
                    CLI_ARGS: php {{.CLI_ARGS | default "-a"}}

    composer:
        desc: Run composer
        cmds:
            -   task: execrun
                vars:
                    SERVICE: composer
                    CLI_ARGS: composer {{.CLI_ARGS}}

    # Tools tasks
    artisan:
        desc: Run Laravel Artisan
        cmds:
            -   task: php-cli
                vars:
                    CLI_ARGS: artisan {{.CLI_ARGS}}

    tinker:
        desc: Run Laravel Tinker
        interactive: true
        deps:
            -   task: database
        cmds:
            -   task: artisan
                vars:
                    CLI_ARGS: tinker {{.CLI_ARGS}}

    test:
        desc: Run Laravel Tests
        deps:
            -   task: database
        cmds:
            -   task: artisan
                vars:
                    CLI_ARGS: test {{.TEST_ARGS}} {{.CLI_ARGS}}

    test:unit:
        desc: Run Laravel Unit Tests
        deps:
            -   task: database
        cmds:
            -   task: artisan
                vars:
                    CLI_ARGS: test --testsuite=Unit {{.TEST_ARGS}} {{.CLI_ARGS}}

    test:integration:
        desc: Run Laravel Intagration Tests
        deps:
            -   task: database
        cmds:
            -   task: artisan
                vars:
                    CLI_ARGS: test --testsuite=Integration {{.TEST_ARGS}} {{.CLI_ARGS}}

    ide-helper:
        desc: Generate ide-helper files
        cmds:
            -   task: artisan
                vars:
                    CLI_ARGS: clear-compiled
            -   task: artisan
                vars:
                    CLI_ARGS: ide-helper:generate
            -   task: artisan
                vars:
                    CLI_ARGS: ide-helper:meta
            -   task: artisan
                vars:
                    CLI_ARGS: ide-helper:eloquent

    models-ac:
        desc: Generate ide-helper models autocomplete
        deps:
            -   task: database
        cmds:
            -   task: artisan
                vars:
                    CLI_ARGS: clear-compiled
            -   task: artisan
                vars:
                    CLI_ARGS: ide-helper:models

    pint:
        desc: Run Pint
        cmds:
            -   task: php-cli
                vars:
                    CLI_ARGS: vendor/bin/pint {{.PINT_ARGS}} {{.CLI_ARGS}}

    rector:
        desc: Run rector
        cmds:
            -   task: php-cli
                vars:
                    CLI_ARGS: vendor/bin/rector process {{.RECTOR_ARGS}} {{.CLI_ARGS}}

    phpstan:
        desc: Run Phpstan
        cmds:
            -   task: phpstan:app
            -   task: phpstan:tests

    phpstan:app:
        desc: Run Phpstan for App code
        cmds:
            -   task: php-cli
                vars:
                    CLI_ARGS: vendor/bin/phpstan analyse ./app {{.PINT_ARGS}} {{.CLI_ARGS}}

    phpstan:tests:
        desc: Run Phpstan for Tests code
        cmds:
            -   task: php-cli
                vars:
                    CLI_ARGS: vendor/bin/phpstan analyse --level=7 ./tests {{.PINT_ARGS}} {{.CLI_ARGS}}

    lint:
        desc: Run linting
        cmds:
            -   cmd: |
                    printf "\n\033[0;36m\033[1mRunning Pint\033[0m\n"
                    task pint -- --test
                ignore_error: true
            -   cmd: |
                    printf "\n\033[0;36m\033[1mRunning Rector\033[0m\n\n"
                    task rector -- --dry-run
                ignore_error: true
            -   cmd: |
                    printf "\n\033[0;36m\033[1mRunning Phpstan\033[0m\n\n"
                    task phpstan

    lint:fix:
        desc: Run linting
        cmds:
            -   cmd: |
                    printf "\n\033[0;36m\033[1mRunning Pint\033[0m\n"
                    task pint
            -   cmd: |
                    printf "\n\033[0;36m\033[1mRunning Rector\033[0m\n\n"
                    task rector
            -   cmd: |
                    printf "\n\033[0;36m\033[1mRunning Phpstan\033[0m\n\n"
                    task phpstan

    # Wrapper tasks
    install:
        desc: Install the project for the first time
        cmds:
            -   task: composer
                vars:
                    CLI_ARGS: install
            -   task: ide-helper
